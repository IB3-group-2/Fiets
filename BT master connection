//This example code is in the Public Domain (or CC0 licensed, at your option.)
//By Evandro Copercini - 2018
//
//This example creates a bridge between Serial and Classical Bluetooth (SPP)
//and also demonstrate that SerialBT have the same functionalities of a normal Serial

#include "BluetoothSerial.h"

#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to and enable it
#endif

BluetoothSerial SerialBT;

void setup() {
  Serial.begin(115200);

  SerialBT.begin("ESP32-Noah", true); //Bluetooth device name

  Serial.println("The device started, now you can pair it with bluetooth!");

  if (SerialBT.connect("ESP32test")) {
    Serial.println("Connected to slave!");
  }

  else {
    Serial.println("Failed to connect. Make sure the slave is powered on and discoverable.");
  }

}

void loop() {
  if (Serial.available()) {
    String msg = Serial.readStringUntil('\n');
    SerialBT.println(msg);   // send to slave
  }

  if (SerialBT.available()) {
    String incoming = SerialBT.readString();
    Serial.print("Received: ");
    Serial.println(incoming);
  }
  delay(500);
}
